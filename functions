command_exists() { command -v "$1" >/dev/null 2>&1 }

alias() {
   if [ $# -eq 2 ] ; then
      builtin alias $1="$2"
   elif [ $# -eq 1 ] ; then
      builtin alias "$*"
   else
      builtin alias
   fi
}

# viw: vi `which binary`
viw() {
   local tmp=`which $@`
   if [ ! -z $tmp ]; then
      vim $tmp
      echo $tmp
   fi
}

# tarcp: copies a directory via tar into another directory
tarcp() {
   if [ $# == 2 ] && [ -d "$1" ]  && [ -d "$2" ] ; then
      tar --same-owner -cpf - "$1" | (cd "$2/"; tar --same-owner -xpf -)
   else
      echo Usage: tarcp dir-to-copy container-dir
   fi
}

sshtunnel() {
   if [ $# -ne 3 ] ; then
      echo "usage: sshtunnel host remote-port local-port"
   else
      /usr/bin/ssh $1 -L $3:localhost:$2
   fi
}

sshproxy() {
   if [ $# -ne 4 ] ; then
      echo "usage: sshproxy dest dest-port proxy proxy-port"
   else
      /usr/bin/ssh -N $3 -L $4:$1:$2
   fi
}

quotes() {
   local quotes=~/docs/quotes.txt
   vi $quotes
   if [ $quotes.dat -ot $quotes ] ; then
      echo Updating quotes.
      fortune -u $quotes
   fi
}

archive_maildir() {
   if [ $# != 0 ] ; then
      while [ $# != 0 ]; do
         if [ -d "$1" ] ; then
            tar zcf "$1.tgz" "$1" && rm -rf "$1"
         else
            echo "'$1' is not a directory"
         fi
         shift
      done
   else
      echo "usage: archive_maildir maildir1 [maildir2 ... maildirN]"
   fi
}

pyenv() {
   if [ $# -ne 1 ] ; then
      echo "usage: pyenv [virtualenv name]"
   else
      local env=$1
      [ ${env:0:1} != '/' ] && env=~/env/$1
      if [ -x $env/bin/python -a -e $env/bin/activate ] ; then
         source $env/bin/activate
         if [ "$TERM" = "screen" ]; then
            printf '\ek%s\e\\' `basename $env`
         fi
      else
         echo "$env is not a root of a virtual env"
      fi
   fi
}

# vim: ft=sh :
